/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class quickfix_ThreadedSocketInitiator */

#ifndef _Included_quickfix_ThreadedSocketInitiator
#define _Included_quickfix_ThreadedSocketInitiator
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     quickfix_ThreadedSocketInitiator
 * Method:    create
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_quickfix_ThreadedSocketInitiator_create
  (JNIEnv *, jobject);

/*
 * Class:     quickfix_ThreadedSocketInitiator
 * Method:    destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_quickfix_ThreadedSocketInitiator_destroy
  (JNIEnv *, jobject);

/*
 * Class:     quickfix_ThreadedSocketInitiator
 * Method:    start
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_quickfix_ThreadedSocketInitiator_start
  (JNIEnv *, jobject);

/*
 * Class:     quickfix_ThreadedSocketInitiator
 * Method:    block
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_quickfix_ThreadedSocketInitiator_block
  (JNIEnv *, jobject);

/*
 * Class:     quickfix_ThreadedSocketInitiator
 * Method:    stop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_quickfix_ThreadedSocketInitiator_stop__
  (JNIEnv *, jobject);

/*
 * Class:     quickfix_ThreadedSocketInitiator
 * Method:    stop
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_quickfix_ThreadedSocketInitiator_stop__Z
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     quickfix_ThreadedSocketInitiator
 * Method:    isLoggedOn
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_quickfix_ThreadedSocketInitiator_isLoggedOn
  (JNIEnv *, jobject);

/*
 * Class:     quickfix_ThreadedSocketInitiator
 * Method:    getSessions
 * Signature: ()Ljava/util/ArrayList;
 */
JNIEXPORT jobject JNICALL Java_quickfix_ThreadedSocketInitiator_getSessions
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
